<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>HTCondor 대시보드 | EC2</title>
    <link rel="stylesheet" href="/css/htcondor-dashboard.css" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  </head>
  <body>
    <div class="container">
      <header>
        <h1>HTCondor 대시보드</h1>
      </header>

      <% if (errorMessage) { %>
      <div class="error-message"><%= errorMessage %></div>
      <% } else { %>
      <!-- 클러스터 노드 상태 -->
      <section class="section">
        <h2>구성 노드 정보 상태</h2>
        <table>
          <thead>
            <tr>
              <th>Node Name</th>
              <th>OS</th>
              <th>Architecture</th>
              <th>Status</th>
              <th>Activity</th>
              <th>Load Average</th>
              <th>Memory</th>
              <th>Activity Time</th>
            </tr>
          </thead>
          <tbody>
            <% clusterNodes.forEach((node) => { %>
            <tr>
              <td><%= node.name %></td>
              <td><%= node.os %></td>
              <td><%= node.architecture %></td>
              <td><%= node.state %></td>
              <td><%= node.activity %></td>
              <td><%= node.loadAverage %></td>
              <td><%= node.memory %></td>
              <td><%= node.activityTime %></td>
            </tr>
            <% }); %>
          </tbody>
        </table>
      </section>

      <!-- 클러스터 요약 -->
      <section class="section">
        <h2>노드 요약</h2>
        <table>
          <thead>
            <tr>
              <th>Architecture</th>
              <th>Total</th>
              <th>Owner</th>
              <th>Claimed</th>
              <th>Unclaimed</th>
              <th>Matched</th>
              <th>Preempting</th>
              <th>Draining</th>
            </tr>
          </thead>
          <tbody>
            <% clusterSummary.forEach((summary) => { %>
            <tr>
              <td><%= summary.architecture %></td>
              <td><%= summary.total %></td>
              <td><%= summary.owner %></td>
              <td><%= summary.claimed %></td>
              <td><%= summary.unclaimed %></td>
              <td><%= summary.matched %></td>
              <td><%= summary.preempting %></td>
              <td><%= summary.draining %></td>
            </tr>
            <% }); %>
          </tbody>
        </table>
      </section>

      <!-- 작업 큐 상태 -->
      <section class="section">
        <h2>작업 큐 상태</h2>
        <pre><%= queue.join("\n") %></pre>
      </section>

      <!-- 총 작업 상태 -->
      <section class="section">
        <h2>모든 작업 상태</h2>
        <pre><%= totalStatus.join("\n") %></pre>
      </section>

      <!-- CPU 메트릭 차트 -->
      <section class="section">
        <h2>CPU 메트릭</h2>
        <canvas id="cpuMetricsChart"></canvas>
      </section>

      <script>
        // 클라이언트에 안전하게 데이터 전달
        var labels = <%- JSON.stringify(metrics[0]?.Timestamps.reverse().map(ts => new Date(ts).toLocaleTimeString()) || []); %>;
        var datasets = <%- JSON.stringify(metrics.reverse().map(metric => ({
          label: metric.Label,
          data: metric.Values,
          backgroundColor: "rgba(75,192,192,0.2)",
          borderColor: "rgba(75,192,192,1)",
          borderWidth: 2,
          hoverBackgroundColor: "rgba(75,192,192,0.4)",
          hoverBorderColor: "rgba(75,192,192,1)",
          fill: false,
          tension: 0.1
        }))); %>;

        // 차트 구성 및 생성
        var canvas = document.getElementById('cpuMetricsChart');
        var config = {
          type: "line",
          data: {
            labels: labels,
            datasets: datasets
          },
          options: {
            responsive: true,
            plugins: {
              legend: {
                display: true,
                position: "top"
              }
            },
            scales: {
              y: {
                title: {
                  display: true,
                  text: "CPU 사용률 (%)"
                },
                beginAtZero: true
              }
            }
          }
        };
        var cpuMetricsChart = new Chart(canvas, config);
      </script>
      <% } %>
    </div>
  </body>
</html>
